/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    // ------------------------------------
    // Statistics about the input sequences
    // ------------------------------------

    withName: TCOFFEE_SEQREFORMAT_SIM{
        ext.args = "-output=sim_idscore"
        publishDir = [
            path: { "${params.outdir}/stats/${task.process.tokenize(':')[-1].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PARSE_SIM{
        publishDir = [
            path: { "${params.outdir}/stats/${task.process.tokenize(':')[-1].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CALCULATE_SEQSTATS"{
        publishDir = [
            path: { "${params.outdir}/stats/sequences/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CONCAT_SEQSTATS"{
        ext.prefix = { "summary_seqstats" }
        publishDir = [
            path: { "${params.outdir}/stats/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CONCAT_SP|CONCAT_TC"{
        ext.prefix = { "summary_sp" }
        publishDir = [
            path: { "${params.outdir}/evaluation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CONCAT_TC"{
        ext.prefix = { "summary_tc" }
        publishDir = [
            path: { "${params.outdir}/evaluation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CONCAT_SIMSTATS"{
        ext.prefix = { "summary_simstats" }
        publishDir = [
            path: { "${params.outdir}/stats/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "MERGE_STATS"{
        ext.prefix = { "complete_summary_stats" }
        publishDir = [
            path: { "${params.outdir}/stats/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    // ------------------------------------
    // Tree building
    // ------------------------------------

    withName: "FAMSA_GUIDETREE"{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}" }
        ext.args = { "${meta.args_tree}" == "null" ? '' : "${meta.args_tree}" }
        publishDir = [
            path: { "${params.outdir}/trees/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CLUSTALO_GUIDETREE"{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}" }
        ext.args   = { "${meta.args_tree}" == "null" ? '' : "${meta.args_tree}" }
        publishDir = [
            path: { "${params.outdir}/trees/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // ------------------------------------
    // Alignment
    // ------------------------------------

    withName: "CREATE_TCOFFEETEMPLATE"{
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/alignment/templates" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "MAFFT|CLUSTALO_ALIGN|TCOFFEE_ALIGN|MUSCLE5_SUPER5|TCOFFEE3D_ALIGN|FAMSA_ALIGN|LEARNMSA_ALIGN|REGRESSIVE"{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}" }
        ext.args = { "${meta.args_aligner}" == "null" ? '' : "${meta.args_aligner}" }
        if ( params.skip_compress ) {
            publishDir = [
                path: { "${params.outdir}/alignment/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        else{
            publishDir = [
                path: { "${params.outdir}/alignment/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }

    // ------------------------------------
    // Alignment evaluation
    // ------------------------------------

    withName: 'PARSE_IRMSD'{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}_irmsd" }
        publishDir = [
            path: { "${params.outdir}/evaluation/${task.process.tokenize(':')[-1]}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TCOFFEE_ALNCOMPARE_SP'{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}_sp" }
        ext.args = "-compare_mode sp"
        publishDir = [
            path: { "${params.outdir}/evaluation/${task.process.tokenize(':')[-1]}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TCOFFEE_ALNCOMPARE_TC'{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}_tc" }
        ext.args = "-compare_mode tc"
        publishDir = [
            path: { "${params.outdir}/evaluation/${task.process.tokenize(':')[-1]}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ULTRAMSATRIC'{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}_tc" }
        publishDir = [
            path: { "${params.outdir}/evaluation/${task.process.tokenize(':')[-1]}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TCOFFEE_IRMSD'{
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}_irmsd" }
        publishDir = [
            path: { "${params.outdir}/evaluation/${task.process.tokenize(':')[-1]}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CONCAT_IRMSD"{
        ext.prefix = { "summary_irmsd" }
        publishDir = [
            path: { "${params.outdir}/evaluation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: "MERGE_EVAL"{
        ext.prefix = { "complete_summary_eval" }
        ext.args = "-f 1,2,3,4,5,6,7 -O"
        publishDir = [
            path: { "${params.outdir}/evaluation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "MERGE_STATS_EVAL"{
        ext.prefix = { "complete_summary_stats_eval" }
        ext.args = "-f 1 -O"
        publishDir = [
            path: { "${params.outdir}/evaluation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "FASTQC"{
        ext.args = '--quiet'
    }

    withName: "CUSTOM_DUMPSOFTWAREVERSIONS"{
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // ------------------------------------
    // Shiny app
    // ------------------------------------
    withName: 'PREPARE_SHINY' {
        publishDir = [
            path: { "${params.outdir}/shiny" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }





    withName: 'ZIP' {
        ext.prefix = { "${meta.id}_${meta.tree}-args-${meta.argstree_clean}_${meta.aligner}-args-${meta.args_aligner_clean}" }
        publishDir = [
            path: { "${params.outdir}/alignment/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


}
